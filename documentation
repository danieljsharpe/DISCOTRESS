##### DISCOTRESS USER INFORMATION #####

### COMPILATION ###
Compile with:
g++ -std=c++17 discotress.cpp kmc_methods.cpp we_kmc.cpp kps.cpp ffs_kmc.cpp mcamc.cpp neus_kmc.cpp milestoning.cpp tps.cpp keywords.cpp ktn.cpp -o discotress

### INPUT FILES ###

these keywords appear in the input file named "input.kmc"

mandatory input files containing the network topology information:
  stat_prob.dat   - single col, length NNODES: ln stationary probabilities for nodes
  ts_conns.dat    - double col, length NEDGES: edge connecting node IDs (each is assumed to be bidirectional)
  ts_weights.dat  - single col, length 2*NEDGES: ln transition rate for forward and reverse transitions (two lines per line in ts_conns.dat)
  nodes.A         - single col, see NODESAFILE keyword: node IDs in the absorbing set A (indexed from 1)
  nodes.B         - single col, see NODESBFILE keyword: node IDs in the initial set B (indexed from 1)
optional input files relating to the simulation and calculating statistics:
  communities.dat - single col, length NNODES: community IDs (indexed from 0) for nodes
  bins.dat        - single col, length NNODES: bin IDs for nodes (indexed from 0), used for
                                               calculating transition path statistics (defaults to communities.dat)
  initcond.dat    - single col, length cf NODESBFILE, see INITCONDFILE keyword: initial probability distribution for nodes of the
                                               initial set B. Defaults to be proportional to a local equilibrium within B
  ntrajs.dat      - single col, length cf COMMSFILE, see NTRAJSFILE keywords: number of short trajectories to run from each community
keyword file:
  input.kmc       - see below for a list of keywords

### OUTPUT FILES ###
walker.0.x.dat    - trajectory information dumped at the specified time intervals (or when a trajectory escapes from a community,
                    depending on options). x is the path number. Format:
                    node ID (indexed from 1) / community ID (indexed from 0) / path length (no. of kMC moves) / path time / ln of path probability / path entropy flow
tp_distribns.dat  - properties of A<-B transition paths, from which the distributions can be analysed. Format:
                    transition path no. / path length / path time / ln of path probability / path entropy flow
tp_stats.dat      - bin statistics, written if communities were specified. Format:
                    bin ID (indexed from 0) / no. of direct A<-B paths for which bin is visited / no. of paths for which bin is visited and trajectory returned to initial set B /
                    transition path probability / committor probability

### MAIN KEYWORDS ###

NNODES <int>
  mandatory, number of nodes in the transition network

NEDGES <int>
  mandatory, number of (bidirectional) edges in the transition network

TRAJ <str>
  mandatory if not ENHANCED KPS, method for propagating individual kMC trajectories
  OPTIONS
    BKL - Bortz-Kalos-Lebowitz (aka n-fold way) rejection-free algorithm
    REJ - rejection algorithm
    LEAPFROG - kMC employing leapfrog moves

ENHANCED <str>
  mandatory, employ an enhanced sampling strategy for accelerating the observation of rare events
  OPTIONS
    WE - weighted ensemble sampling
    KPS - kinetic path sampling
    FFS - forward flux sampling
    MCAMC - Monte Carlo with absorbing Markov chains
    NEUS - non-equilibrium umbrella sampling
    MILES - milestoning
    TPS - transition path sampling
    NONE - no enhanced sampling strategy employed

NODESAFILE <str> <int>
  mandatory, name of the file containing the node ID's (indexed from 1) belonging to the A (absorbing) set and no. of nodes in A

NODESBFILE <str> <int>
  mandatory, name of the file containing the node ID's (indexed from 1) belonging to the B (initial) set and no. of nodes in B

NABPATHS <int>
  mandatory, the simulation is terminated when this number of A<-B paths have been successfully sampled

### OPTIONAL KEYWORDS RELATING TO ENHANCED SAMPLING ###

INITCONDFILE <str>
  optional. Name of the file containing initial occupation probabilities for nodes in B that are alternative to the
    stationary probabilities. The number of entries is assumed to be the same as the specified number of nodes in B,
    and the specified order is assumed to be the same also (cf MINBFILE). Values must sum to unity

COMMSFILE <str> <int>
  mandatory if ENHANCED WE or ENHANCED KPS and not ADAPTIVECOMMS
    name of the file containing the definitions of communities (single-column, indexed from zero, number of entries equal
    to the number of nodes in the network) and no. of communities. Is overridden by ADAPTIVECOMMS
    the communities are used in the calculation of transition path statistics (ie committor functions and
    transition path probability densities). For enhanced sampling methods, the communities are used to divide the state
    space (eg the communities define the trapping basins in KPS, or the communities for resampling in WE).
    The specification of communities must be consistent with the definition of the A and B sets. An exception is
    if the number of communities is 2, in which case the initial set B can be a subset of the relevant community

ADAPTIVECOMMS <double>
  mandatory if ENHANCED WE or ENHANCED KPS and not COMMSFILE, default False
    set the partitioning of the state space leveraged in WE-kMC and in kPS to be defined on-the-fly
    argument is the minimum transition rate for a node to be included in the community being built up
    if set with ENHANCED KPS, KPSKMCSTEPS is ignored

COMMSTARGFILE <str>
  mandatory if ENHANCED WE and not ADAPTIVECOMMS, name of the file containing the target number of trajectories in each bin
    (single-column, number of entries equal to the number of communities in the network)

BINFILE <str> <int>
  optional. Default to be the same as COMMSFILE
    name of the file containing the definition of bins (indexed from 0) for calculating transition path statistics, and no. of bins

TAU <long double>
  mandatory if ENHANCED WE or if ENHANCED KPS and not BRANCHPROBS
    If WE, tau is the time between resampling trajectories
    If KPS, tau is the lag time at which the linear transition probability matrices are estimated (or provided, if TRANSNPROBS)

KPSKMCSTEPS <int>
  optional, if ENHANCED KPS, the number of standard BKL kMC steps to be performed after a kPS escape from
    a trapping basin. Default 0 (pure kPS, no kMC steps). Requires BRANCHPROBS to be set. Ignored if ADAPTIVECOMMS

NELIM <int>
  mandatory if ENHANCED KPS, the maximum number of nodes that can be eliminated from the current trapping basin. If
    NELIM exceeds the number of nodes in the largest community, then all states of any trapping basin are always eliminated.
    Note that NELIM is equal to the maximum number of transition matrices stored for the active sub-network, and therefore
    the choice of this keyword (along with the sizes of communities) can strongly affect memory usage.

### OTHER OPTIONAL KEYWORDS ###

MAXIT <int>
  default is inf. The maximum number of iterations of the relevant algorithm to run before the simulation is terminated (if the
  target number of A<-B paths to simulate is not reached). The interpretation of this option depends on the chosen enhanced
  sampling method.
    WE - number of iterations of the resampling procedure
    KPS - number of basin escape trajectories simulated
    NONE - number of iterations of the standard kMC algorithm

BRANCHPROBS
  the transition probabilities are calculated as the branching probabilities

TRANSNPROBS
  the weights to read in are transition probabilities, not rates (compatible with ENHANCED KPS only)
  the self-loop transition probabilities for nodes are inferred to be the remainders

PFOLD
  when used in conjunction with ENHANCED KPS, specifies that a committor function calculation is performed instead of a kPS simulation
  the communities.dat file must specify precisely three communities; the A set, the B set, and the set of all other nodes
  the committor functions are written to the files "committor_AB.dat" and "committor_BA.dat" (for A<-B and B<-A directions, respectively)
  set NABPATHS to any number >0

TINTVL <double>
  ignored if ENHANCED KPS (in which case trajectory data is written after every basin escape). Time interval for dumping trajectory information
  negative value (default) indicates that trajectory data is not written
  zero value specifies that all trajectory information is written

SEED <int>
  seed for the random number generators

DEBUG
  enable extra printing and tests to aid debugging

DUMPWAITTIMES
  dump the mean waiting times for nodes to the file meanwaitingtimes.dat

### INFORMATION RELATING TO NONLINEAR MASTER EQUATIONS ###

DISCOTRESS can be used to interpret a set of rules relating to a nonlinear master equation and map the system to a linear transition network.
Additional files are needed for this purpose:
  changevecs.dat  - ...
